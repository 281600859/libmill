
#include <stdio.h>
#include <assert.h>
#include <uv.h>

coroutine test1 ()
{
    int rc;
    struct sockaddr_in addr;
    struct tcpsocket ls;
    struct tcpsocket as;
    struct tcpsocket cs;
    char buf [2];
    endvars;

    rc = uv_ip4_addr ("127.0.0.1", 7000, &addr);
    assert (rc == 0);

    rc = tcpsocket_init (&ls);
    assert (rc == 0);
    rc = tcpsocket_bind (&ls, (struct sockaddr*) &addr, 0);
    assert (rc == 0);
    rc = tcpsocket_listen (&ls, 10);
    assert (rc == 0);

    rc = tcpsocket_init (&as);
    assert (rc == 0);
    call tcpsocket_accept (&ls, &as);

    rc = tcpsocket_init (&cs);
    assert (rc == 0);
    call tcpsocket_connect (&cs, (struct sockaddr*) &addr);

    wait (0, &rc);
    assert (rc == 0);
    wait (0, &rc);
    assert (rc == 0);

    call tcpsocket_send (&cs, "Hi", 2);
    call tcpsocket_recv (&as, buf, 2);

    wait (0, &rc);
    assert (rc == 0);
    wait (0, &rc);
    assert (rc == 0);
    assert (buf [0] == 'H' && buf [1] == 'i');

    call tcpsocket_term (&cs);
    call tcpsocket_term (&as);
    call tcpsocket_term (&ls);

    wait (0, &rc);
    assert (rc == 0);
    wait (0, &rc);
    assert (rc == 0);
    wait (0, &rc);
    assert (rc == 0);
}

int main ()
{
    test1 ();
    return 0;
}

