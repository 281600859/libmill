
#include <stdio.h>
#include <assert.h>
#include <uv.h>

coroutine quux ()
{
    int rc;
    struct sockaddr_in addr;
    struct tcpsocket ls;
    struct tcpsocket s;
    coroutine tcplisten l;
    coroutine send snd;
    endvars;

    rc = tcpsocket_init (&ls);
    assert (rc == 0);
    rc = tcpsocket_init (&s);
    assert (rc == 0);
    rc = uv_ip4_addr ("127.0.0.1", 7000, &addr);
    assert (rc == 0);
    rc = tcpbind (&ls, (struct sockaddr*) &addr, 0);
    assert (rc == 0);
    
    while (1) {
        call tcplisten (&l, &ls, 10, &s);
        wait;
        assert (@who == &l);
        printf ("accepted\n");
        call send (&snd, &s, "Hello, world!", 13) [1];
        wait;
        assert (@who == &snd);
        if (@err != 0)
            printf ("Error!\n");
        if (@tag == 0)
            printf ("sent\n");
    }
}

int main ()
{
    quux ();
    return 0;
}

